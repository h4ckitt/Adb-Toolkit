#!/bin/bash

adb start-server 2>/dev/null
  adb devices>/tmp/devices.txt
  sed -i '1d' /tmp/devices.txt

  get_index(){
        local value="$1"
        shift
        local arr=("$@")
        for j in "${!arr[@]}";
        do
                if [[ "${arr[$j]}" == "${value}" ]]; then
                        index="${j}"
                        return
                fi
       done
}
  x=()
  read -r stat < /tmp/devices.txt
  if [ "$stat" == "" ]; then
    zenity --error --text="No devices connected" --title="No device" --width=300 >/dev/null 2>&1
  else
    while read -r dev || [[ -n $dev ]]; do
    IFS='|'; for i in $dev; do
      if [ "$i" != "" ]; then
      x+=("$(sed 's/[[:space:]].*//g' <<<$i)")
      if [ "$(grep -o -w unauthorized <<<$i)" == "unauthorized" ]; then
        x+=("unauthorized")
      else
        x+=("authorized")
      fi
    else continue
    fi
    done
  done < /tmp/devices.txt
  #dl=$(sed 's/\device//g' /tmp/devices.txt)
  device=$(yad --list --text="Choose a device" --column="Devices" --column="Status" ${x[@]} --print-column=1 --no-click --center --width=300 --height=200  2>/dev/null)
  ch=$?
  device=$(tr -d '|' <<<$device)
  get_index "$device" "${x[@]}"
  if [ "${x[$((index + 1))]}" == "unauthorized" ]; then
    zenity --error --text="Selected Device Is Not Authorized \nPlease Allow USB Debugging From This PC On Your Device\n\nOperation Aborted" --title="Aborted" --width=500 >/dev/null 2>&1
    exit 1
  fi
if  [ "$?" -eq 1 ]; then

  zenity --error --text="Operation cancelled" --title="Aborted" --width=300 >/dev/null 2>&1
    exit 1

  elif [ "$device" == "" ] ; then

  zenity --error --text="No device selected \n\n Aborting Operation" --title="Aborted" --width=300 >/dev/null 2>&1

  exit 1
 
 else

 adb -s $device shell

fi
fi