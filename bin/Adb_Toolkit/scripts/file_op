#! /bin/bash
pick(){
type=$1
eval y=/storage
if [ "$type" == "dir" ]; then
  y+="/"
fi  
while :
do
x=()
if [ "$type" == "dir" ]; then
    adb shell "cd $y && ls -d */" > /tmp/tree    
    tr '\n' '|' < /tmp/tree > /tmp/text
    while read -r files || [[ -n $files ]]; do
        IFS='|'; for i in $files; do
            x+=("$i")
        done
    done < /tmp/text
else
    adb shell "cd $y && ls" > /tmp/tree    
    tr '\n' '|' < /tmp/tree > /tmp/text
    while read -r files || [[ -n $files ]]; do
        IFS='|'; for i in $files; do
            x+=("$i")
        done
    done < /tmp/text  
fi
tmp=$(mktemp -u --tmpdir opt.XXXX)
yad --center --list --title="File Browser" --column="Pick A File" .. "${x[@]}" --select-action 'echo %s' > "$tmp" --button="gtk-cancel:2" --button="Select!gtk-ok:1" --width=500 --height=500 2>/dev/null
ch=$?
z=$(sed -n -e "$(wc -l < "$tmp")p" "$tmp")
rm "$tmp"
z=$(tr -d '|' <<<"$z")
if [ "$z" == ".." ]; then
  if [ "$type" == "dir" ]; then
        z+=/      
      fi
fi
#z=$(printf '%q' "$z")
if [ "$(echo "${z: -1}")" != "/" ]; then
y+="/""$(printf '%q' "$z")"
else
y+="$(printf '%q' "$z")"
fi
if [ $ch -eq 1 ]; then
    eval y=$y
    break
elif [ $ch -eq 2 ]; then  
    zenity --error --text="No folder selected \n\n Aborting operation" --title="No file selected" >/dev/null 2>&1
    echo "# Operation Aborted"
    exit 1    
    break
fi
done
rm /tmp/tree
rm /tmp/text 
}
adb start-server 2>/dev/null
  adb devices>/tmp/devices.txt
  sed -i '1d' /tmp/devices.txt

  get_index(){
        local value="$1"
        shift
        local arr=("$@")
        for j in "${!arr[@]}";
        do
                if [[ "${arr[$j]}" == "${value}" ]]; then
                        index="${j}"
                        return
                fi
       done
} 
  x=()
  read -r stat < /tmp/devices.txt
  if [ "$stat" == "" ]; then
    zenity --error --text="No devices connected" --title="No device" --width=300 >/dev/null 2>&1
    exit 1
  else    
    while read -r dev || [[ -n $dev ]]; do      
      x+=("$(sed 's/[[:space:]].*//g' <<<$dev)")
      if [ "$(grep -o -w device <<<$dev)" == "device" ]; then
        x+=("authorized")
      else
        x+=("$(sed 's/.*[[:space:]]//g' <<<$dev)")
      fi       
  done < /tmp/devices.txt    
  device=$(yad --list --text="Choose a device" --column="Devices" --column="Status" ${x[@]} --print-column=1 --no-click --center --width=300 --height=200  2>/dev/null)
  
if  [ "$?" -eq 1 ]; then

  zenity --error --text="Operation cancelled" --title="Aborted" --width=300 >/dev/null 2>&1
    exit 1

  elif [ "$device" == "" ] ; then

  zenity --error --text="No device selected \n\n Aborting Operation" --title="Aborted" --width=300 >/dev/null 2>&1

  exit 1
 
 else
  device=$(tr -d '|' <<<$device)
  get_index "$device" "${x[@]}"
  if [ "${x[$((index + 1))]}" != "authorized" ]; then
    zenity --error --text="Selected Device Is Not Authorized \nPlease Allow USB Debugging From This PC On Your Device\n\nOperation Aborted" --title="Aborted" --width=500 >/dev/null 2>&1
    exit 1
  fi
if  [ "$1" == "" ]; then
zenity --error --text="Run this file from the main script" --title="Invalid run location" --width=300 >/dev/null 2>&1

elif    [ "$1" == "all_files" ]; then

 (
    echo "10" ; sleep 1
    echo "# Detecting Device" ; sleep 1
    adb wait-for-device
    echo "20" ; sleep 1
    echo "# Device detected" ; sleep 2
    echo "# Opening file browser" ; sleep 1
    file=$(zenity --file-selection --file-filter="All Files | *.*" 2>/dev/null)
    if [ "$?" -eq 1 ]; then
    zenity --error --text="Cancelled by user \n\n Aborting Operation" >/dev/null 2>&1
    echo "# Aborted"
    exit 1    
    else
    echo "# Opening Device Browser"; sleep 1
    pick dir
    echo "50" ; sleep 1
    echo "# Sending file to device" ; sleep 1
    adb -s $device push "$file" "$y"
    echo "# Finishing up"
    echo "70" ; sleep 4
    echo "# Done"
    echo "100" 
    exit 0
    fi

 ) | (zenity --progress \
  --title="Send File" \
  --text="Initializing" \
  --percentage=0 \
  --width=300 \
   2>/dev/null )

  if [ "$?" = -1 ] ; then
        zenity --error \
          --text="Operation Cancelled." >/dev/null --width=300 2>&1
    fi 

elif  [ "$1" == "directory" ]; then
(
    echo "10" ; sleep 1
    echo "# Detecting Device" ; sleep 1
    adb wait-for-device
    echo "20" ; sleep 1
    echo "# Device detected" ; sleep 2
    echo "# Opening file browser" ; sleep 1
    dir=$(zenity --file-selection --directory 2>/dev/null)
    if  [ "$?" -eq 1 ]; then
    zenity --error --text="No folder selected \n\n Aborting operation" --title="No file selected" --width=300 >/dev/null 2>&1
    echo "# Operation Aborted"
    exit 1
    else
    echo "Opening Device Browser"; sleep 1
    pick dir
    echo "50" ; sleep 1
    echo "# Sending folder to device" ; sleep 1
    adb -s $device push "$dir" "$y"
    echo "# Finishing up"
    echo "70" ; sleep 4
    echo "# Done"
    echo "100" 
     exit 0
   fi
) | (zenity --progress \
  --title="Send Folder" \
  --text="Initializing" \
  --percentage=0 \
  --width=300 \
  2>/dev/null)

if [ "$?" -eq -1 ] ; then
        zenity --error \
          --text="Operation Cancelled." --width=300 >/dev/null 2>&1
    fi
  elif  [ "$1" == "pull" ]; then
(
    echo "10" ; sleep 1
    echo "# Detecting Device" ; sleep 1
    adb wait-for-device
    echo "20" ; sleep 1
    echo "# Device detected" ; sleep 2
    echo "# Opening Device file browser" ; sleep 1
    pick file
    echo "50" ; sleep 1
    echo "# Opening File Browser" ; sleep 1
    dir=$(zenity --file-selection --directory 2>/dev/null)
    echo "# Pulling File"; sleep 1
    adb -s $device pull $y "$dir" 
    echo "# Finishing up"
    echo "70" ; sleep 4
    echo "# Done"
    echo "100" 
     exit 0
) | (zenity --progress \
  --title="Pull File" \
  --text="Initializing" \
  --percentage=0 \
  --width=300 \
  2>/dev/null)

if [ "$?" -eq -1 ] ; then
        zenity --error \
          --text="Operation Cancelled." >/dev/null --width=300 2>&1
    fi
  fi
fi
fi