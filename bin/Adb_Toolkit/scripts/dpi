#!/bin/bash 

adb start-server 2>/dev/null
  adb devices>/tmp/devices.txt
  sed -i '1d' /tmp/devices.txt

  get_index(){
        local value="$1"
        shift
        local arr=("$@")
        for j in "${!arr[@]}";
        do
                if [[ "${arr[$j]}" == "${value}" ]]; then
                        index="${j}"
                        return
                fi
       done
} 
  x=()
  read -r stat < /tmp/devices.txt
  if [ "$stat" == "" ]; then
    zenity --error --text="No devices connected" --title="No device" --width=300 >/dev/null 2>&1
    exit 1
  else
    tr -d '\n' '|' < /tmp/devices.txt >/tmp/devices.txt
    while read -r dev || [[ -n $dev ]]; do
    IFS='|'; for i in $dev; do
      if [ "$i" != "" ]; then
      x+=("$(sed 's/[[:space:]].*//g' <<<$i)")
      if [ "$(grep -o -w device <<<$i)" == "device" ]; then
        x+=("authorized")
      else
        x+=("$(sed 's/.*[[:space:]]//g' <<<$i)")
      fi
      else continue
    fi
    done
  done < /tmp/devices.txt
  #dl=$(sed 's/\device//g' /tmp/devices.txt)
  device=$(yad --list --text="Choose a device" --column="Devices" --column="Status" ${x[@]} --print-column=1 --no-click --center --width=300 --height=200  2>/dev/null)
  if  [ "$?" -eq 1 ]; then

  zenity --error --text="Operation cancelled" --title="Aborted" --width=300 >/dev/null 2>&1
    exit 1

  elif [ "$device" == "" ] ; then

  zenity --error --text="No device selected \n\n Aborting Operation" --title="Aborted" --width=300 >/dev/null 2>&1

  exit 1
 
 else
  device=$(tr -d '|' <<<$device)
  get_index "$device" "${x[@]}"
  if [ "${x[$((index + 1))]}" != "authorized" ]; then
    zenity --error --text="Selected Device Is Not Authorized \nPlease Allow USB Debugging From This PC On Your Device\n\nOperation Aborted" --title="Aborted" --width=500 >/dev/null 2>&1
    exit 1
  fi
if  [ "$1" == "" ]; then
zenity --error --text="Run this file from the main script" --title="Invalid run location" --width=300 >/dev/null 2>&1

elif    [ "$1" == "view" ]; then

adb -s $device wait-for-device

dpi=$(adb -s $device shell wm density)

zenity --info --text="$dpi" --title=DPI --width=300 >/dev/null 2>&1

exit 0

elif  [ "$1" == "change" ]; then

while :
  do
re='^[0-9]+$'
adb -s $device wait-for-device 
dpi=$(zenity \
      --entry \
      --text="Density Value:" \
      --entry-text=73 \
      --title="DPI Value" \
      --height=200 \
      2>/dev/null
      )

      if  [ "$?" != "0" ]; then

        zenity --error --text="Aborted" --title="Aborted" >/dev/null 2>&1
        exit 0
        else
  
  if [ "$dpi" == "" ]; then
  zenity --error --text="DPI value cannot be empty" --width=300 >/dev/null 2>&1

elif  ! [[  $dpi =~ $re ]]; then
  zenity --error --text="DPI has to be a number" >/dev/null --width=300 2>&1
elif  [ $(($dpi)) -lt 72 ] ; then
  zenity --error --text="DPI cannot be less than 72" >/dev/null --width=300 2>&1

  else

  adb -s $device shell wm density $dpi
  zenity --info --text="Changed device density to $dpi" --width=300 >/dev/null 2>&1
  exit 0
 fi
 fi
 done
 fi
 fi
fi